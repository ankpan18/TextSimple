{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","console","log","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","split","reverse","join","document","getElementById","select","navigator","clipboard","writeText","filter","n","length","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","defaultProps","aboutText","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.89967d90.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                {props.aboutText}\r\n              </Link>\r\n            </li> */}\r\n          </ul>\r\n         {/* <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form>  */}\r\n\r\n          {/* Blue Mode */}\r\n          \r\n\r\n    {/* Dark Mode */}\r\n          <div\r\n            className={`form-check form-switch text-${\r\n              props.mode === \"light\" ? \"dark\" : \"light\"\r\n            }`}\r\n          >\r\n            <input\r\n              className=\"form-check-input\"\r\n              onClick={props.toggleMode}\r\n              type=\"checkbox\"\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            <label\r\n              className=\"form-check-label\"\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n            >\r\n              Enable Dark Mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set Title Here\",\r\n  aboutText: \"About\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    console.log(\"Uppercase was clicked\" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to UpperCase\", \"success\");\r\n  };\r\n\r\n  const handleLoClick = () => {\r\n    console.log(\"Lowercase was clicked\" + text);\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to LowerCase\", \"success\");\r\n  };\r\n\r\n  const handleReClick = () => {\r\n    let newText = text.split(\"\").reverse().join(\"\");\r\n    setText(newText);\r\n    props.showAlert(\"Reversed Text\", \"success\");\r\n  };\r\n\r\n  const handleCopy = () => {\r\n    console.log(\"Copy Text Demo\");\r\n    var text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Text Copied\", \"success\");\r\n  };\r\n\r\n  const handleClear = () => {\r\n    console.log(\"Clearing Text\");\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"Text Cleared\", \"success\");\r\n  };\r\n\r\n  const handleExtra =()=>{\r\n    console.log(\"Removing Additional Spaces\");\r\n    let newText=text.split(/[ ]+ /);\r\n    setText(newText.join(\" \"));\r\n  }\r\n\r\n  const handleOnChange = (event) => {\r\n    console.log(\"On Change\");\r\n    setText(event.target.value);\r\n  };\r\n  const [text, setText] = useState(\"Enter text here2\");\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{\r\n          color: props.mode === \"dark\" ? \"white\" : \"#2c2c2c\",\r\n        }}\r\n      >\r\n        <h1\r\n        /* className={`text-${props.mode === \"dark\" ? \"light\" : \"dark\"}`}\r\n          onClick={props.titleMode} */\r\n        >\r\n          {props.heading}\r\n        </h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            style={{\r\n              backgroundColor: props.mode === \"light\" ? \"white\" : \"grey\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"#2c2c2c\",\r\n            }}\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>\r\n          Convert to Uppercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>\r\n          Convert to LowerCase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2 my-2\" onClick={handleReClick}>\r\n          Reverse Text\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2 my-2\" onClick={handleCopy}>\r\n          Copy Text\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2 my-2\" onClick={handleClear}>\r\n          Clear Text\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2 my-2\" onClick={handleExtra}>\r\n          Remove Extra Spaces\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"container my-2\"\r\n        style={{\r\n          color: props.mode === \"dark\" ? \"white\" : \"#2c2c2c\",\r\n        }}\r\n      >\r\n        <h2>Your Text Summary</h2>\r\n        <p>\r\n          {text.split(' ').filter(function(n) { return n !== '' }).length} words and {text.length} characters\r\n        </p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes</p>\r\n        <h2>Preview</h2>\r\n        <p>\r\n          {text.length > 0\r\n            ? text\r\n            : \"Enter something in the textbox above to preview it here\"}\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n  const capitalize = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n  return (\r\n    props.alert && (\r\n      <div\r\n        className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n        role=\"alert\"\r\n      >\r\n        <strong>{capitalize(props.alert.type)} </strong>\r\n        {props.alert.msg}\r\n      </div>\r\n    )\r\n  );\r\n}\r\n","import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\n// import About from \"./components/About\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n// import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n \n\nfunction App() {\n  const [mode, setMode] = useState(\"light\"); //Whether dark mode is enabled or not\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#2c2c2c\";\n      showAlert(\"Dark Mode has been enabled\", \"success\");\n      document.title=\"TextSimple- Dark Mode\";\n\n      // setInterval(() => {\n      //   document.title=\"Enter Password\";\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title=\"Your Card Details\";\n      // }, 2500);\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode has been enabled\", \"success\");\n      document.title=\"TextSimple- Light Mode\";\n\n    }\n  };\n\n\n  /* My attempt\n   const titleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n    } else {\n      setMode(\"light\");\n    }\n  }; */\n\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title=\"Fastify\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n      {/* <Switch> */}\n        {/* /users --> Component 1\n        /users/home --> Component 2 */}\n          {/* <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/\"> */}\n          <TextForm\n          showAlert={showAlert}\n          heading=\"Enter the text to Analyze Below\"\n          mode={mode} />           \n          {/* </Route>\n        </Switch> */}\n      </div>\n        {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}